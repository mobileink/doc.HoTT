\ProvidesPackage{hottmacros}[2011/02/23 v1.0 My own macros]

\usepackage[fleqn]{amsmath}

%% load fonts before fontspec
\usepackage{amssymb}
\usepackage{amsthm}

\usepackage{MnSymbol} %% clashes with mathabx
%% \let\veebar\undefined
%% \let\barwedge\undefined
%% \let\doublebarwedge\undefined
%% \let\circledS\undefined
%% \let\centerdot\undefined
%% \let\dotplus\undefined
%% \let\complement\undefined
%% \let\divideontimes\undefined
%% \let\mid\undefined

\usepackage{dsfont}
\usepackage{stmaryrd}

\usepackage{unicode-math}
\let\bullet\undefined
\let\circ\undefined
\let\coloneq\undefined
\let\dagger\undefined
\let\ddagger\undefined
\let\diamond\undefined
\let\emptyset\undefined
\let\owns\undefined
\let\bigominus\undefined
\let\bigplus\undefined
\let\bigtimes\undefined

\usepackage{cmll}
\usepackage{txfonts}

\usepackage{relsize}
\usepackage{stackengine}

\usepackage{titlesec}
\usepackage[linktoc=all]{hyperref}
\hypersetup{
    colorlinks,
    citecolor=black,
    filecolor=black,
    linkcolor=blue,
    urlcolor=blue
}
\usepackage{xcolor}
\usepackage{mathtools}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% https://tex.stackexchange.com/questions/341261/draw-baseline-in-equation
\newcommand*\drawbaseline[2][orange]
 {\begingroup\sbox0{$\displaystyle#2$}\mathrlap{\color{#1}\rule{\wd0}{.4pt}}\endgroup#2}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% for typesetting math formulae supporting internal arrows
%% from https://tex.stackexchange.com/questions/232425/tikz-node-positioning-in-math-environment-especially-frac

\newcommand{\mytikzmark}[2]{%
  \tikz[remember picture,inner sep=0pt,outer sep=0pt,baseline,anchor=base]
    \node (#1) {\ensuremath{#2}};}

%%%%%%%%%%%%%%%%
\newcommand{\ML}{Martin-Löf}

\newcommand{\Univ}{\mathcal{U}}
\newcommand{\PU}{\mathcal{P:U}}

%% Vernacular structure connectors
\newcommand{\structor}{\ensuremath{\reflectbox{;}}\,}
\newcommand{\choice}{\ensuremath{\epsilon}}
%% russel's reverse iota
\newcommand{\riota}{\ensuremath{\iota}}
%% \newcommand{\riota}{\ensuremath{\rotatebox[origin=c]{180}{\iota}}}

%% equality
\newcommand{\fregeq}{\ensuremath{≡}}
\newcommand{\defeq}{\ensuremath{\eqdef}} %% {≡}} %% \coloneq
\newcommand{\EQ}{\ensuremath{\textsf{\slshape EQ}}}
\newcommand{\EQN}{\ensuremath{\textsf{\slshape EQN}}}
\newcommand{\REQN}{\ensuremath{\textsf{\slshape REQN}}}
\newcommand{\pair}{\ensuremath{\textsf{\slshape pair}}}
\newcommand{\refl}{\ensuremath{\textsf{\slshape refl}}}

\newcommand{\hole}{\ensuremath{[\cdot]}}

\newcommand{\modus}{\textit{modus ponens}}

%% tally strokes
\newcommand{\Stroke}[2][]{\begin{tikzpicture}[thick,baseline,#1]
\foreach \X [evaluate=\X as \Y using {int(mod(\X,5))}]in {1,...,#2}
{\ifnum\Y=0
\draw (\X*0.5ex+0.3ex,0) -- ++(-2.2ex,1.8ex);
\else
\draw (\X*0.5ex+0.3ex,0) -- ++(0.3ex,1.8ex);
\fi}
\end{tikzpicture}}

%% object kinds
\newcommand{\inductive}[1]{\ensuremath{#1_{\scriptscriptstyle\bot}}}
\newcommand{\coinductive}[1]{\ensuremath{#1_{\scriptscriptstyle\top}}}
\newcommand{\tbot}[1]{\ensuremath{#1_{\scriptscriptstyle\bot}}}
\newcommand{\ttop}[1]{\ensuremath{#1_{\scriptscriptstyle\top}}}

%% morphisms
\let\exp\undefined %% we use \exp for CT-style exponentiated functions
\newcommand{\exp}[2]{\ensuremath{#1^{#2}}}
\newcommand{\expbot}[2]{\ensuremath{#1_{\scriptscriptstyle\bot}^{#2}}}
\newcommand{\coexp}[2]{\ensuremath{#1_{\scriptscriptstyle\top}^{#2}}}
\newcommand{\exptop}[2]{\ensuremath{#1_{\scriptscriptstyle\top}^{#2}}}
%% \newcommand{\morph}[2]{\ensuremath{#1^{#2}}}
\newcommand{\morph}[2]{\ensuremath{#1\fnarrow{}#2}}

\newcommand{\morphbot}[2]{\ensuremath{#1_{\scriptscriptstyle\bot}^{#2}}}
\newcommand{\morphtop}[2]{\ensuremath{#1_{\scriptscriptstyle\top}^{#2}}}


%% dark numbers
\newcommand{\NDark}{\Nat_{\bullet}}
\newcommand{\ZDark}{\textsf{\slshape Z}_{\bullet}}
\newcommand{\SDark}{\textsf{\slshape S}_{\bullet}}
\newcommand{\dark}[1]{#1_{\bullet}}

\newcommand{\hmorph}{\hspace{-2pt}\rightsquigarrow}

%% nat numbers
\newcommand{\ZNat}{\textsf{\slshape Z}}
\newcommand{\SNat}{\textsf{\slshape S}}
\newcommand{\ZS}{\textsf{\slshape ZS}}
\newcommand{\ZSS}{\textsf{\slshape ZSS}}

%%%%
\DeclareRobustCommand*{\Fusion}{$\boldmath\fusion$}

\newcommand{\IBMMM}{\ensuremath{\textsf{IBM}^3}}

\newcommand{\dom}{\ensuremath{\texttt{\upshape dom}}}
\newcommand{\codom}{\ensuremath{\texttt{\upshape codom}}}

\newcommand{\defn}[1]{\ensuremath{\texttt{\upshape #1}_{\scriptscriptstyle\bot}}}
\newcommand{\defnup}[1]{\ensuremath{#1_{\scriptscriptstyle\bot}}}
%% \newcommand{\defn}[1]{\ensuremath{\texttt{\upshape #1}}}
\newcommand{\codefn}[1]{\ensuremath{\texttt{\upshape #1}_{\scriptscriptstyle\top}}}
\newcommand{\fn}[1]{\ensuremath{#1_{\scriptscriptstyle\bot}}}
\newcommand{\cofn}[1]{\ensuremath{#1_{\scriptscriptstyle\top}}}

\newcommand{\defndn}[1]{\ensuremath{#1_{\scriptscriptstyle\top}}}

%% \newcommand{\codefn}[1]{\ensuremath{\texttt{\upshape #1}^{\omegaup}}}
%% \newcommand{\codefn}[1]{\ensuremath{\overline{\texttt{\upshape #1}}}}


\newcommand{\prop}[1]{\ensuremath{#1}}
\newcommand{\stmt}[1]{\ensuremath{\mathcal{#1}}}

%% infinities
%% natural numbers w/o: \Nat
%% with zero
\newcommand{\NatZ}{\ensuremath{\Nat_0}}
\newcommand{\ONat}{\ensuremath{\omega}}
%% lifting
\newcommand{\Lift}[2]{\ensuremath{#1^{#2}}}
\newcommand{\promote}[2]{\ensuremath{#1\rightharpoonup{}#2}}
\newcommand{\revpromote}[2]{\ensuremath{#1\leftharpoonup{}#2}}
\newcommand{\demote}[2]{\ensuremath{#1\rightharpoondown{}#2}}
\newcommand{\revdemote}[2]{\ensuremath{#1\leftharpoondown{}#2}}
\newcommand{\prodemote}[2]{\ensuremath{#1\rightleftharpoons{}#2}}
\newcommand{\depromote}[2]{\ensuremath{#1\leftrightharpoons{}#2}}

%% identity function
\newcommand{\idfun}{\ensuremath{\textsf{\slshape Id}}}

%% duality
\newcommand{\dual}{\ensuremath{\hspace{1em}\rightleftarrows\hspace{1em}}}

%% types and cotypes
%% \newcommand{\type}[1]{\ensuremath{#1}}
\newcommand{\type}[1]{\ensuremath{#1_{\scriptscriptstyle\bot}}}
\newcommand{\cotype}[1]{\ensuremath{#1_{\scriptscriptstyle\top}}}
\newcommand{\cotok}[1]{\ensuremath{\overline{#1}}}
\newcommand{\ctor}[1]{\ensuremath{\textsf{\slshape c}_{#1}}}
\newcommand{\coctor}[1]{\ensuremath{\overline{\textsf{\slshape c}}_{#1}}}

%% finite lists
%% NB: \list is already defined and used by e.g. itemize
\newcommand{\List}[1]{\ensuremath{{#1^{*}}}}
\newcommand{\seq}[1]{\ensuremath{#1s}}
\newcommand{\nillist}{\ensuremath{\texttt{[\,]}}}

\newcommand{\head}{\ensuremath{\texttt{\upshape head}}}
\newcommand{\tail}{\ensuremath{\texttt{\upshape tail}}}
\newcommand{\Cons}{\ensuremath{\texttt{\upshape cons}}}
\newcommand{\cons}{\ensuremath{{\mathpunct{::}}}}
%% ld = left delim
\newcommand{\listld}{\ensuremath{\textsf{[}}}
\newcommand{\listrd}{\ensuremath{\textsf{]}}}

%% infinite lists (colists, streams)
\newcommand{\stream}[2]{\ensuremath{\langle{}#1,#2\ldots\rangle}}
\newcommand{\colist}[1]{\ensuremath{{#1^{\omegaup}}}}
\newcommand{\coseq}[1]{\ensuremath{\overline{#1s}}}
\newcommand{\cohead}{\ensuremath{\texttt{\upshape head}_{\scriptscriptstyle\top}}}
\newcommand{\cotail}{\ensuremath{\texttt{\upshape tail}_{\scriptscriptstyle\top}}}
\newcommand{\cocons}{\ensuremath{\texttt{\upshape cons}_{\scriptscriptstyle\top}}}

\newcommand{\sigmabot}{\ensuremath{\sigma_{\scriptscriptstyle{\bot}}}}
\newcommand{\sigmatop}{\ensuremath{\sigma_{\scriptscriptstyle{\top}}}}

%% demo
\newcommand{\eqstream}[1]{\ensuremath{{#1^{c}}}}


%% transfinite colists
\newcommand{\xcolist}[1]{\ensuremath{{#1^{\Omega}}}}
\newcommand{\xcoseq}[1]{\ensuremath{\overline{#1s}}}
\newcommand{\xcohead}{\ensuremath{\textsf{\slshape head}}_{\Omega}}
\newcommand{\xcotail}{\ensuremath{\textsf{\slshape tail}}_{\Omega}}
\newcommand{\xcocons}{\ensuremath{\textsf{\slshape cons}}_{\Omega}}

%% Inference types
%% generic
%% logical "so"
\newcommand{\lso}{\ensuremath{\assert}} %% {\vdash}}
\newcommand{\linfer}{\ensuremath{\assert}} %% {\vdash}}

%% functions
\newcommand{\fnarrow}{\ensuremath{\rightarrow}}
\newcommand{\func}[2]{\ensuremath{#1\fnarrow{}#2}}
\newcommand{\funcbot}[2]{\ensuremath{(#1\fnarrow{}#2})_{\scriptscriptstyle\bot}}
\newcommand{\functop}[2]{\ensuremath{(#1\fnarrow{}#2})_{\scriptscriptstyle\bot}}

% type inference
%% for brevity: tj for typing judgment, even though we don't say that
\newcommand{\tj}[2]{\ensuremath{#1\hspace{1pt}\mathpunct{:}\hspace{-1pt}#2}}
\newcommand{\tjsmall}[2]{\ensuremath{#1\hspace{-0pt}\mathpunct{:}\hspace{-0pt}#2}}
%% \newcommand{\type}{\ensuremath{\hspace{-2pt}\mathpunct{:}\hspace{-3pt}}}
\newcommand{\tinfer}{\ensuremath{\assert_{\tau}}}
% sequent inference
\newcommand{\sso}{\ensuremath{\assert_{\sigma}}}
% proof inference
\newcommand{\pso}{\ensuremath{\Vdash}}

%% Sequent connectors
\newcommand{\seqso}{\ensuremath{\vdash}}
\newcommand{\seqand}{\ensuremath{\scriptscriptstyle\barwedge\ }}
\newcommand{\seqor}{\ensuremath{\scriptscriptstyle\veebar\ }}
%% \newcommand{\seqand}{\ensuremath{\filledtriangleup\ }}
%% \newcommand{\seqor}{\ensuremath{\filledtriangledown\ }}

%% LK
\newcommand{\lkand}{\ensuremath{\land}}
\newcommand{\lkor}{\ensuremath{\lor}}
\newcommand{\lkso}{\ensuremath{\rightarrow}}
\newcommand{\lkneg}{\ensuremath{\neg}}

%% LL
\newcommand{\llnil}[1]{\ensuremath{#1^{\bot}}}

\newcommand{\nil}[1]{\ensuremath{#1^{\bot}}}
\newcommand{\Nil}{\ensuremath{(\cdot)^{\bot}}}
\newcommand{\nilnil}[1]{\ensuremath{#1^{\bot\bot}}}
\newcommand{\lollipop}{\ensuremath{\multimap}}
\newcommand{\llso}{\ensuremath{\multimap}}


\newcommand{\ofcourse}{\ensuremath{!}}
\newcommand{\whynot}{\ensuremath{?}}

\newcommand{\xand}{\ensuremath{\barwedge}}
\newcommand{\addand}{\ensuremath{\barwedge}}

\newcommand{\xor}{\ensuremath{\veebar}}
\newcommand{\addor}{\ensuremath{\veebar}}


\newcommand{\fission}{\ensurestackMath{\stackon[-2.5pt]{\lor}{.}}}
\newcommand{\fusion}{\ensurestackMath{\stackon[-6.5pt]{\land}{.}}}
%% {%
%%   \ensurestackMath{\stackon[-7pt]{\wedge}{\scriptscriptstyle\wedge}}}

\newcommand{\Vect}{\ensuremath{\mathsf{Vec}}}
\newcommand{\ContextG}{\ensuremath{\Gamma\ }}
\newcommand{\ContextD}{\ensuremath{\Delta\ }}
\newcommand{\ContextL}{\ensuremath{\Lambda\ }}
\newcommand{\ContextP}{\ensuremath{\Pi\ }}
\newcommand{\ContextS}{\ensuremath{\Sigma\ }}
\newcommand{\ContextT}{\ensuremath{\Theta\ }}

%% TODO: need \ruleor to merge rules

\newcommand{\semantic}[1]{\ensuremath{\llbracket #1\rrbracket}}

\newcommand{\PinfQ}{\ensuremath{P\vdash Q\ }}
\newcommand{\PimplQ}{\ensuremath{P\rightarrow Q\ }}


\newcommand{\Pixy}{\prod\limits_{(x,y:A)}}
\newcommand{\Pipxy}{\prod\limits_{(p:x=_Ay)}}

\newcommand{\Cxyp}{C\colon\prod\limits_{(x,y:A)}(x=_Ay)\to\Univ}
\newcommand{\cxyp}{C\colon\Pi_{(x,y:A)}(x=_Ay)\to\PU}
\newcommand{\Cxydu}{C{:}\prod\limits_{(x,y:A)}(x=_Ay)\to\Univ}
\newcommand{\cxyu}{C{:}\Pi_{(x,y:A)}(x=_Ay)\to\Univ}

\newcommand{\SXYPT}{S^{\circ_A}\colon\prod\limits_{(x,y:A)}\prod\limits_{p{:}(x\circ_Ay)}{:}\,\Univ}
\newcommand{\SXY}{S^{x\circ_Ay}\prod\limits_{p{:}(x\circ_Ay)}{:}\,\Univ}
\newcommand{\SXYP}{S^{x\circ_Ay}(p){:}\,\Univ}
\newcommand{\SXX}{S^{x\circ_Ax}\prod\limits_{p{:}(x\circ_Ax)}{:}\,\Univ}
\newcommand{\SXXP}{S^{x\circ_Ax}(p){:}\,\Univ}

\newcommand{\RXXP}{R^{x\circ_Ax}(p) :\equiv (x\circ_Ax)}


\newcommand{\Xyu}{\prod\limits_{(x,y:A)}(x\circ_Ay)\to\Univ}
\newcommand{\xyu}{\Pi_{(x,y:A)}(x\circ_Ay)\to\Univ}
\newcommand{\Xyueq}{\prod\limits_{(x,y:A)}(x=_Ay)\to\Univ}
\newcommand{\xyueq}{\Pi_{(x,y:A)}(x=_Ay)\to\Univ}

\newcommand{\Unit}{\textsf{Unit}}
\newcommand{\UnitA}{\textsf{Unit}^A}

%% \newcommand{\refl}[1]{\textsf{refl}_#1}
\newcommand{\reflA}{\textsf{refl}^A}
\newcommand{\reflAx}{\textsf{refl}^A(x)}
%% \newcommand{\reflAa}{\textsf{refl}^A(a)}
\newcommand{\reflAb}{\textsf{refl}^A(b)}
\newcommand{\reflx}{\textsf{refl}_x}
\newcommand{\reflAa}{(a\circ^A a)}

\newcommand{\reln}[3]{(#2\circ^#1 #3)}

\newcommand{\reflAaa}{(a\circ^A a)}
\newcommand{\reflAab}{(a\circ^A b)}
\newcommand{\reflAbb}{(b\circ^A b)}
\newcommand{\reflAxy}{(x\circ^A y)}
\newcommand{\reflTAx}{(x\circ^A x)}
\newcommand{\preflAa}{p{:}(a\circ^A a)}
\newcommand{\preflAxy}{p{:}(x\circ^A y)}

\newcommand{\reflTa}{(a\circ a)}
\newcommand{\preflTa}{p{:}(a\circ a)}

\newcommand{\reflTx}{(x\circ x)}
\newcommand{\preflTx}{p{:}(x\circ x)}

\newcommand{\reflfam}{\prod\limits_{a:A}(a=_Aa)}
\newcommand{\reflfamU}{\prod\limits_{A{:}\,\Univ}\prod\limits_{a{:}A}(a=_Aa)}

\newcommand{\rA}{\bullet^A}
\newcommand{\rAx}{\bullet^A(x)}
\newcommand{\rfama}{\prod\limits_{a:A}(a\circ_Aa)}
\newcommand{\rfamx}{\prod\limits_{x:A}(x\circ_Ax)}
\newcommand{\rfamU}{\prod\limits_{A{:}\,\Univ}\prod\limits_{a{:}A}(a\circ_Aa)}


\newcommand{\cxxreflx}{c\colon\prod\limits_{(x:A)}C(x,x,refl_x)}

\newcommand{\fxyp}{f\colon\prod\limits_{(x,y:A)}\prod\limits_{(p:x=_Ay)}C(x,y,p)}
\newcommand{\Piau}{\Pi_{(a:A)}}

\newcommand{\SuccT}{\prod\limits_{(a:A)}\Univ}
\newcommand{\succt}{\Pi_{(a:A)}\Univ}

%% dependent successor families
\newcommand{\DsuccT}{\prod\limits_{(x,y:A)}\Univ}
\newcommand{\DDsuccT}{\prod\limits_{(x:A)}\prod\limits_{(y:A)}\Univ}
\newcommand{\dsucct}{\Pi_{(x,y:A)}\Univ}

%% relations
{\newcommand{\relA}{\circ_A}
\newcommand{\relAdef}{\relA{:}\prod\limits_{(a,b:A)}\Univ}
{\newcommand{\relrelA}{\circ_{(x\circ_Ay)}}
{\newcommand{\relrelAdef}{\circ_{(x\circ_Ay)}{:}\prod\limits_{p,q{:}(x\circ_Ay)}\Univ}
%% {\newcommand{\relrelAdef}{\circ_{(a\circ_Ab)}{:}\prod\limits_{(x,y:A)}\prod\limits_{p,q{:}(x\circ_Ay)}\Univ}
{\newcommand{\xrely}{\((x\circ_Ay)\)}
{\newcommand{\yrelx}{\((y\circ_Ax)\)}

\newcommand{\aA}{\(a{:}A\)}
\newcommand{\pP}{\(p\colon\!P\)}
\newcommand{\PropP}{\(P\)}
\newcommand{\Poofp}{\(p\)}

\newcommand{\abAB}{\((a,b):A\times B\)}

\newcommand{\rlambda}{\reflectbox{\lambda}}

\newcommand{\Nat}{\mathbb{N}}
\newcommand{\Id}[3]{\mathsf{Id}_{#1}(#2,#3)}
\newcommand{\Eq}[3]{#2=_{#1}#3}

\theoremstyle{remark}
\newtheorem{remark}{Remark}

\theoremstyle{theorem}
\newtheorem{theorem}{Theorem}
